#!/bin/bash

set -e

if [[ ${1} == "init" ]]; then
	echo "entering initial setup"
	case $OSTYPE in
	(darwin*)
		echo "running on a mac..."
		;;
	(linux*)
		echo "running on a linux..."
		DIST=$(lsb_release -si)
		case ${DIST} in
		(Ubuntu)
			echo "ensuring required system packages are present..."
			sudo apt-get update >/dev/null
			sudo apt-get install -y >/dev/null \
				libtime-hires-perl \
				vim
			;;
		esac
		;;
	(*)
		echo "*** UNRECOGNIZED SYSTEM (OSTYPE) FOUND: ${OSTYPE} ***"
		;;
	esac
fi

echo "setting up dot files in ~"
(
cd ~/env/dot
for FILE in *; do
	cp $FILE ~/.$FILE
done
)

echo "configuring vim..."
mkdir -p ~/.vim
rsync -a vim/ ~/.vim/

echo "copying in ~/bin scripts..."
mkdir -p ~/bin ~/sw
cp ~/env/bin/* ~/bin

if [[ ! -f ~/bin/jq ]]; then
	echo "  installing jq..."
	case $OSTYPE in
	(darwin*)
		curl -Ls https://github.com/stedolan/jq/releases/download/jq-1.5/jq-osx-amd64 > ~/bin/jq
		chmod 0755 ~/bin/jq
		;;
	(linux*)
		curl -Ls https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 > ~/bin/jq
		chmod 0755 ~/bin/jq
		;;
	esac
fi
if [[ -z "$(command -v spruce)" ]]; then
	version=0.13.0
	echo "  installing spruce (v${version})..."
	case $OSTYPE in
	(darwin*)
		curl -Ls https://github.com/geofffranks/spruce/releases/download/v${version}/spruce_${version}_darwin_amd64.zip > spruce.zip
		unzip -p spruce.zip spruce_${version}_darwin_amd64/spruce > ~/bin/spruce
		chmod 0755 ~/bin/spruce
		rm spruce.zip
		;;
	(linux*)
		curl -Ls https://github.com/geofffranks/spruce/releases/download/v${version}/spruce_${version}_linux_amd64.tar.gz | \
			tar -xz --strip-components 1 -C ~/bin/ spruce_${version}_linux_amd64/spruce
		;;
	esac
fi

echo "configuring git..."
~/env/git-config

echo "setting up ~/.bashrc..."
touch ~/.bashrc
grep -q "source $HOME/env/bashrc" ~/.bashrc || echo "source $HOME/env/bashrc" >> ~/.bashrc
source ~/.bashrc
if [[ ! -f ~/.bash_profile ]]; then
	echo ". ~/.bashrc" > ~/.bash_profile
fi

if [[ -n ${IAMJAMESHUNT} || "${USER}" == "jhunt" || "${USER}" == "jrhunt" ]]; then
	if [[ ! -f ~/.ssh/authorized_keys ]]; then
		echo "setting up ~/.ssh/authorized_keys"
		if [[ ! -d ~/.ssh ]]; then
			mkdir -m 0700 ~/.ssh
		fi

		MAIN_PUBLIC="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzBc3qXx9fhO6lDtGCV8URDvzPt2WaKjpuWU6BtFKXCvsa0Y0S+Ej0Xn6CS7aEK8Cs0h0ZPm04Ye6XgOT2h/asHGcKvFfsEtUG2Y0tdLGx28WKsFfYb9UFYEqb258SyKYJIbmT9SI7K4wgD0wxri6bP3W7wdSqXC+vl7fU//XF98o/cv7gpUsENnEq15+0Ed40y5XKIzNqLUFGNWirBwW0OfjYCdXyfFnqd6xvtNfchOu7uRxdSDJ5rVsBHZWfCrxHzvz6Z2S7Ui8iJ1SmIckNhE6qYMccgvp1TggTZrO6baKMc8JSnO8ClWc9mLdEJiQHkCqDtrarnHEyk26UsqlV jhunt@MAIN"
		echo "${MAIN_PUBLIC}" > ~/.ssh/authorized_keys
		chmod 0600 ~/.ssh/authorized_keys
	fi
fi
