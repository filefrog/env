# bashrc for BOSH hacking

#
# Wrap the main bosh command to support injected sub-commands
#
#  bosh route          Recreate the local BOSH-lite host routes
#  bosh curl           curl the BOSH director (with auth)
#  bosh sync           Download all the manifests!
#  bosh rere           Recreate release + upload release + deploy
#
#  bosh *              Hand off to the main bosh binary
#
bosh() {
	case ${1} in
	(route)
		sudo ip route del 10.244.0.0/16 && \
		sudo ip route add 10.244.0.0/16 via 192.168.50.4
		return $?
		;;

	(curl)
		url=$2
		if [[ -z ${url} ]]; then
			echo >&2 "Usage: bosh curl relative-url"
			return 1
		fi
		config=${BOSH_CONFIG:-$HOME/.bosh_config}
		target=$(  spruce json $config | jq -r .target)
		username=$(spruce json $config | jq -r '.auth["'${target}'"].username')
		password=$(spruce json $config | jq -r '.auth["'${target}'"].password')
		curl -Lsk --basic --user "${username}:${password}" "${target}/${url}"
		return $?
		;;

	(sync)
		dest=$2
		if [[ -z ${dest} ]]; then
			echo >&2 "Usage: bosh sync /path/to/save/to"
			return 1
		fi

		mkdir -p ${dest}
		for deployment in $(bosh curl /deployments | jq -r .[].name); do
			bosh download manifest ${deployment} ${dest}/${deployment}.yml
		done
		return 0
		;;

	(rere)
		command bosh create release --force && bosh upload release && bosh -n deploy
		return $?
		;;

	(*)
		command bosh "$@"
		return $?
		;;
	esac
}
