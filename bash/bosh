# bashrc for BOSH hacking

#
# Wrap the main bosh command to support injected sub-commands
#
#  bosh route          Recreate the local BOSH-lite host routes
#  bosh curl           curl the BOSH director (with auth)
#  bosh msync          Download all the manifests!
#  bosh is             Make Bosh Target Great Again!
#  bosh rere           Recreate release + upload release + deploy
#
#  bosh *              Hand off to the main bosh binary
#
bosh() {
	case ${1} in
	(route)
		sudo ip route del 10.244.0.0/16 && \
		sudo ip route add 10.244.0.0/16 via ${2:-192.168.50.6}
		return $?
		;;

	(thunder)
		shift
		exec command bosh ssh --gw-user netop --gw-host 10.200.131.9 --gw-private-key ~/.ssh/buffalo-lab.key "$@"
		;;

	# broken
	#(curl)
	#	url=$2
	#	if [[ -z ${url} ]]; then
	#		echo >&2 "Usage: bosh curl relative-url"
	#		return 1
	#	fi
	#	config=${BOSH_CONFIG:-$HOME/.bosh_config}
	#	target=$(  spruce json $config | jq -r .target)
	#	username=$(spruce json $config | jq -r '.auth["'${target}'"].username')
	#	password=$(spruce json $config | jq -r '.auth["'${target}'"].password')
	#	curl -Lsk --basic --user "${username}:${password}" "${target}/${url}"
	#	return $?
	#	;;

	# broken
	#(msync)
	#	dest=$2
	#	if [[ -z ${dest} ]]; then
	#		echo >&2 "Usage: bosh msync /path/to/save/to"
	#		return 1
	#	fi

	#	mkdir -p ${dest}
	#	for deployment in $(bosh curl /deployments | jq -r .[].name); do
	#		command bosh download manifest ${deployment} ${dest}/${deployment}.yml
	#	done
	#	return 0
	#	;;

	(ps)
		command bosh instances --ps
		;;

	(is)
		if [[ -n "$2" ]]; then
			export BOSH_ENVIRONMENT="$2"
			if [[ -n "$3" ]]; then
				export BOSH_DEPLOYMENT="$3"
				if [[ -n "$4" ]]; then
					export BOSH_MANIFEST="$4"
				fi
			fi
		fi
		echo "bosh director: ${BOSH_ENVIRONMENT:-(not set)}"
		echo "deployment:    ${BOSH_DEPLOYMENT:-(not set)}"
		echo "cur. manifest: ${BOSH_MANIFEST:-(not set)}"
		return 0
		;;

	(clear)
		unset BOSH_ENVIRONMENT BOSH_DEPLOYMENT BOSH_MANIFEST
		return 0
		;;

	(rere)
		command bosh create-release --timestamp-version --force && command bosh upload-release && command bosh -n deploy ${BOSH_MANIFEST:?set BOSH_MANIFEST first} --no-redact
		return $?
		;;

	(*)
		command bosh "$@"
		return $?
		;;
	esac
}
